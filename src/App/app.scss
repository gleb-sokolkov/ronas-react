@use "/src/styles/variables";
@use "/src/styles/functions";

.app {
  width: 100%;
  min-height: 100vh;
  background: map-get($map: variables.$pallete, $key: "default");

  &_theme_clear-sky {
    background: map-get($map: variables.$pallete, $key: "clear-sky");
  }
  &_theme_few-clouds {
    background: map-get($map: variables.$pallete, $key: "few-clouds");
  }
  &_theme_scattered-clouds {
    background: map-get($map: variables.$pallete, $key: "scattered-clouds");
  }
  &_theme_rain {
    background: map-get($map: variables.$pallete, $key: "rain");
  }
  &_theme_thunderstorm {
    background: map-get($map: variables.$pallete, $key: "thunderstorm");
  }

  &__nav-container {
    margin-bottom: functions.interpolate(50, 100);
  }

  &__weather-display {
    margin-bottom: functions.interpolate(140, 218);
  }

  &__weather-details {
  }
}

.container {
  max-width: map-get($map: variables.$sizes, $key: "container");
  margin: 0 auto;
  padding: functions.interpolate(25, 99);
}

.btn {
  --color: #{map-get($map: variables.$pallete, $key: "light60")};
  --color-active: #{map-get($map: variables.$pallete, $key: "light")};
  --color-disabled: #{map-get($map: variables.$pallete, $key: "light20")};
  --bg: #{map-get($map: variables.$pallete, $key: "light10")};
  border-radius: 0.2em;
  padding: 0.3em 0.5em;
  transition: 0.2s ease;
  color: var(--color);

  // &_theme_danger {
  //   --color: hsl(0, 94%, 77%);
  //   --color-active: hsl(0, 94%, 87%);
  //   --color-disabled: hsla(0, 94%, 77%, 0.2);
  //   --bg: hsla(0, 94%, 77%, 0.1);
  // }

  &_theme_blue {
    --color: #{map-get($map: variables.$pallete, $key: "blue")};
    --color-disabled: #{map-get($map: variables.$pallete, $key: "blue20")};
    --color-active: #{map-get($map: variables.$pallete, $key: "blue")};
    --bg: #{map-get($map: variables.$pallete, $key: "blue20")};
  }

  &:disabled {
    color: var(--color-disabled);
  }

  &:hover:not(:disabled),
  &:focus:not(:disabled) {
    background: var(--bg);
  }

  &:active:not(:disabled) {
    color: var(--color-active);
  }
}

.input {
  $bg: map-get($map: variables.$pallete, $key: "light10");
  background: $bg;
  border: 2px solid transparent;
  border-radius: 0.2em;
  padding: 0.5em;
  transition: 0.2s ease;

  &::placeholder {
    color: map-get($map: variables.$pallete, $key: "light60");
  }

  &:hover:not(:disabled),
  &:hover:not(:disabled) {
    background: transparent;
    border-color: $bg;
  }
}

.h2 {
  font-size: functions.interpolate(30, 50);
}

.secondary {
  font-size: functions.interpolate(15, 18);
  font-weight: 300;
  color: map-get($map: variables.$pallete, $key: "light60");
}

.weather-display {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;

  &__title {
    display: flex;
    flex-flow: row wrap-reverse;
    justify-content: center;
    align-items: center;
    gap: 0.25rem;
  }

  &__title:not(:only-child) {
    margin-bottom: 0.625rem;
  }

  &__icon {
    width: functions.interpolate(140, 200);
    height: auto;
  }

  &__temp {
    font-size: functions.interpolate(120, 180);

    @media (min-width: 0px) {
      font-weight: 300;
    }
    @media (min-width: map-get($map: variables.$sizes, $key: "mobile")) {
      font-weight: 400;
    }
  }

  &__temp_unit_celsius::after,
  &__temp_unit_fahrenheit::after,
  &__temp_unit_kelvin::after {
    color: map-get($map: variables.$pallete, $key: "light60");
    font-size: 0.5em;
  }

  &__temp_unit_celsius::after {
    content: " °C";
  }
  &__temp_unit_fahrenheit::after {
    content: " °F";
  }
  &__temp_unit_kelvin::after {
    content: " °K";
  }
}

.weather-details {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
  align-items: flex-start;
  gap: 2.1875rem;

  &__item {
    flex: 1 1 8rem;
  }

  &__header:not(:only-child) {
    margin-bottom: 0.625rem;
  }

  &__data {
  }
  &__data_windspeed_m\/s::after {
    content: " м/с";
  }
  &__data_windspeed_mph::after {
    content: " миля/ч";
  }
  &__data_pressure_hPa::after {
    content: " гПа";
  }
  &__data_pressure_mmgh::after {
    content: " мм рт. ст.";
  }
  &__data_humidity_\%::after {
    content: "%";
  }
  &__data_precipitation_mm::after {
    content: " мм";
  }
}
